spring:
  application:
    name: order-service-sleuth-zipkin
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/cloud?serverTimezone=UTC
    username: root
    password: root
  jpa:
    database: MySQL
    show-sql: true
    open-in-view: true
    hibernate:
      ddl-auto: none
  #修改zipkin使用rabbitmq采集数据
  zipkin:
    #    base-url: http://127.0.0.1:9411/  #server的请求地址
    sender:
      #      type: web #数据的传输方式 , 已http的形式向server端发送数据
      type: rabbit #向rabbitmq中发送消息
  sleuth:
    sampler:
      probability: 1 #采样比
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener: # 这里配置了重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
server:
  port: 6061
eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    metadata-map:
      zone: jieyang
  client:
    register-with-eureka: true
    fetch-registry: true
    prefer-same-zone-eureka: true
    availability-zones:
      guangdong: jieyang,shantou
    region: guangdong
    service-url:
      jieyang: http://localhost:8080/eureka/,http://localhost:8081/eureka/
      shantou: http://localhost:8082/eureka/

feign:
  client:
    config:
      product-service: #服务名
        connectTimeout: 5000 #相当于Request.Options
        readTimeout: 5000 #相当于Request.Options
        #配置Feign的日志级别，相当于代码配置方式中的Logger
        loggerLevel: FULL
        #Feign的错误解码器，相当于代码配置方式中的ErrorDecoder
        #        errorDecoder: com.example.SimpleErrorDecoder
        #配置重试，相当于代码配置方式中的Retryer
        #        retryer: com.example.SimpleRetryer
        #配置拦截器，相当于代码配置方式中的RequestInterceptor
        #        requestInterceptors:
        #          - com.example.FooRequestInterceptor
        #          - com.example.BarRequestInterceptor
        decode404: false
#修改负载均衡策略   服务名 - ribbon - NFLoadBalancerRuleClassName: 策略
product-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

#sleuth链路追踪
logging:
  level:
    root: info
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG
